// âœ… JavaScript Notes: Modulus (%), Division (/), Math.floor() â€“ Full Concept

/*
ðŸ“Œ What is % ?
- % is the modulus operator.
- It returns the remainder after division.
- Syntax: A % B â†’ Remainder after dividing A by B.
*/

/*
ðŸ“Œ What is / ?
- / is the division operator.
- It returns the decimal result of dividing A by B.

ðŸ“Œ What is Math.floor() ?
- Math.floor(x) returns the largest integer â‰¤ x (rounds down).
- Used to get whole number part (quotient) of division.
*/

let A = 23;
let B = 6;

console.log("Quotient using /       :", A / B);             // âž¤ 3.833...
console.log("Whole Quotient (floor) :", Math.floor(A / B)); // âž¤ 3
console.log("Remainder using %      :", A % B);             // âž¤ 5

// âœ… Formula: A = B Ã— quotient + remainder
// So: 23 = 6 Ã— 3 + 5

/*
--------------------------------------
ðŸ”¹ Special Trick: Getting Last Digits
--------------------------------------
*/

console.log(69 % 10);     // âž¤ 9 â†’ Last digit of 69
console.log(123 % 10);    // âž¤ 3 â†’ Last digit
console.log(250 % 100);   // âž¤ 50 â†’ Last 2 digits
console.log(9876 % 100);  // âž¤ 76 â†’ Last 2 digits
console.log(12345 % 1000); // âž¤ 345 â†’ Last 3 digits

// ðŸ”¸ Pattern:
/// A % 10    â†’ Last 1 digit
/// A % 100   â†’ Last 2 digits
/// A % 1000  â†’ Last 3 digits

/*
-----------------------------
ðŸ”¹ Division + Pagination Example
-----------------------------
*/

let itemIndex = 250;
let itemsPerPage = 100;

let page = Math.floor(itemIndex / itemsPerPage) + 1;
console.log("Page number:", page); // âž¤ 3 (Items 200â€“299)

// âœ… Why +1?
// Because itemIndex starts from 0 (zero-based index)

/*
---------------------------------------
ðŸ”¹ Quotient & Remainder â€“ Table Format
---------------------------------------
*/

function printDivisionDetails(a, b) {
  console.log(`\nðŸ”¹ ${a} Ã· ${b}`);
  console.log("  Decimal Quotient     :", a / b);
  console.log("  Whole Quotient       :", Math.floor(a / b));
  console.log("  Remainder (a % b)     :", a % b);
}

printDivisionDetails(23, 6);
printDivisionDetails(69, 10);
printDivisionDetails(250, 100);
printDivisionDetails(10, 3);
printDivisionDetails(5, 5);
printDivisionDetails(2, 7);

/*
-----------------------------
ðŸ”¹ Real-World Use Cases
-----------------------------
*/

// ðŸ”¸ Even or Odd
let num = 27;
console.log(num % 2 === 0 ? "Even" : "Odd"); // âž¤ Odd

// ðŸ”¸ Check if number is multiple of 3
if (num % 3 === 0) {
  console.log("Multiple of 3");
}

// ðŸ”¸ Every 5th item logic
for (let i = 1; i <= 20; i++) {
  if (i % 5 === 0) {
    console.log(i + " is a multiple of 5");
  }
}

// ðŸ”¸ Check if year ends in '24'
let year = 2024;
if (year % 100 === 24) {
  console.log("Year ends with 24");
}

// ðŸ”¸ Get last digit(s)
console.log("Last digit:", year % 10);     // âž¤ 4
console.log("Last 2 digits:", year % 100); // âž¤ 24

/*
---------------------
ðŸ§  Summary to Remember
---------------------

âœ… a % b      â†’ remainder
âœ… a / b      â†’ decimal division
âœ… Math.floor(a / b) â†’ whole number quotient

ðŸŸ¢ Rule: a = (b Ã— quotient) + remainder

ðŸŸ¢ Use-Cases:
âœ” Even/odd check (% 2)
âœ” Multiples (e.g. % 3, % 5)
âœ” Pagination (floor division + 1)
âœ” Last digit(s) (% 10, 100, 1000)
âœ” Item grouping in loops

ðŸ”¹ Example:
23 Ã· 6
â†’ quotient = 3
â†’ remainder = 5
â†’ 23 = 6Ã—3 + 5 âœ…
*/
